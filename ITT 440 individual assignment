#include <unistd.h>     
#include <sys/types.h>   
#include <errno.h>      
#include <stdio.h>     
#include <sys/wait.h>   
#include <stdlib.h>     
#include <string.h>
 
int main(int argc, char*argv[]) {
    void sigint_handler(int sig);
    char s[200];
    int fd[2];
    if (signal(SIGINT, sigint_handler) == SIG_ERR){
    perror("signal");
    exit(1);
    }
        if (pipe(fd) == -1){
            return 1;
        }
        
        int pid = fork();
            if (pid < 0){
                return 2;
            }
            
        if (pid == 0){
            // child process
            close(fd[0]);
            char str[200];
            printf("input string here: ");
            fgets(str,200,stdin);
            str[strlen(str) - 1] = '\0';
            
            int n = strlen(str) + 1;
            if (write(fd [1], &n, sizeof(int)) < 0);
            return 3;
            
        if (write(fd [1],str,sizeof(char) * n) < 0){
            return 4;
        }
        close (fd[1]);
        } else{
            // Parent process
            close(fd[1]);
            char str[200];
            int n;
            
            if (read (fd[0], &n, sizeof(int))< 0){
               return 5;
           }
            if (read (fd[0], str, sizeof(char) * n) < 0){
                return 6;
            }
            printf("received: %s\n", str);
            close(fd[0]);
            wait(NULL);
        }
        {
        perror("fork"); /* display error message */
    }
        printf(" (Put Ctrl + C to get interrupt message):\n");
    if (fgets(s, 200, stdin) == NULL)
        perror("gets");
    else
        printf("you entered: %s\n", s);
}
    void sigint_handler(int sig)
    {
        printf("Ctrl + C detected! \n");
    }
